ALGORITHM dot_product
VAR
 v1 : Array_of integer[3]
 v2 : Array_of integer[3]
n : integer
i, ps_retour : INTEGER;
begin
  FOR i FROM 1 TO 3 DO
      Read(V1[i]);
  END_FOR
  FOR i FROM 1 TO 3 DO
      Read(V2[i]);
  END_FOR


  for i from 1 to n do
    ps_retour := dot_product(v1[i],v2[i]);
    if (ps_retour = 0)then
      return "orthogonal"
    else
      return "non-orthogonal"
    end_if
  end_for
end


Function dot_product(var x1:array_of integer, var x2:array_of integer) : INTEGER
var
  i : INTEGER;
  ps : INTEGER :=0;
begin
  for i from 1 to 3 do
    ps = ps + x1[i]*x2[i];
  end_for
  return ps;
end
